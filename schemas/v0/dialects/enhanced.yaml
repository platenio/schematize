# yaml-language-server: $schema=http://localhost:1313/v0/dialects/enhanced.json
$schema:        https://json-schema.org/draft/2020-12/schema
$id:            http://localhost:1313/v0/dialects/enhanced.json
$dynamicAnchor: meta
$vocabulary:
  https://schematize.platen.io/vocabularies/applicator:        false
  https://schematize.platen.io/vocabularies/content:           false
  https://schematize.platen.io/vocabularies/core:              false
  https://schematize.platen.io/vocabularies/format-annotation: false
  https://schematize.platen.io/vocabularies/meta-data:         false
  https://schematize.platen.io/vocabularies/unevaluated:       false
  https://schematize.platen.io/vocabularies/validation:        false
  https://schematize.platen.io/vocabularies/schematize:        false

title: Schematize (Enhanced) Schema
type: [object, boolean]

allOf:
  - $ref: /v0/vocabularies/schematize.json
    schematize:
      weight: 1
      heading:
        attributes:
          toc_text: Schematize
  - $ref: /v0/vocabularies/core.json
    schematize:
      weight: 2
      heading:
        attributes:
          toc_text: Core
  - $ref: /v0/vocabularies/applicator.json
    schematize:
      weight: 3
      heading:
        attributes:
          toc_text: Applicator
  - $ref: /v0/vocabularies/validation.json
    schematize:
      weight: 4
      heading:
        attributes:
          toc_text: Validation
  - $ref: /v0/vocabularies/unevaluated.json
    schematize:
      weight: 5
      heading:
        attributes:
          toc_text: Unevaluated
  - $ref: /v0/vocabularies/format-annotation.json
    schematize:
      weight: 6
      heading:
        attributes:
          toc_text: Format for annotation
  - $ref: /v0/vocabularies/content.json
    schematize:
      weight: 7
      heading:
        attributes:
          toc_text: Content
  - $ref: /v0/vocabularies/meta-data.json
    schematize:
      weight: 8
      heading:
        attributes:
          toc_text: Meta-data

schematize:
  synopsis:    An enhanced JSON Schema 2020-12 dialect for documenting schemas and meta-schemas.
  description: |
    The Schematize dialect is a meta-schema wholly compatible with JSON Schema 2020-12. It extends
    the built-in vocabulary with the new `schematize` keyword. The `schematize` keyword controls
    how integrating tools should export documentation for a JSON Schema defined with this dialect.

    Integrating tools can also publish "normal" 2020-12 schemas by recursively removing the
    `schematize` keyword and setting the `$schema` key to
    `https://json-schema.org/draft/2020-12/schema`.

    This enables you to author documentable schemas that are published in a compatible definition
    which doesn't require consumers to know or handle the `schematize` keyword.

    This enhanced dialect uses the re-declared vocabularies from 2020-12. Each of those
    vocabularies is functionally identical to the official vocabulary, but they include more
    documentation in the schemas. This can make authoring schemas and meta-schemas easier, as
    editors can display more contextually useful information and link to the documentation.

  publish:
    add_docs_url: root_only
    # schema_format: yaml